// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package models

type ProximaModel interface {
	IsProximaModel()
}

type Account struct {
	AccountNumber *int       `json:"account_number"`
	Address       *string    `json:"address"`
	PublicKey     []*int     `json:"public_key"`
	Sequence      *int       `json:"sequence"`
	Balances      []*Balance `json:"balances"`
}

type AtomicSwap struct {
	ClosedTime          *string `json:"closedTime"`
	CreatedTime         *string `json:"createdTime"`
	CrossChain          *int    `json:"crossChain"`
	ExpectedIncome      *string `json:"expectedIncome"`
	ExpireHeight        *string `json:"expireHeight"`
	FromAddr            *string `json:"fromAddr"`
	InAmount            *string `json:"inAmount"`
	OutAmount           *string `json:"outAmount"`
	RandomString        *string `json:"randomString"`
	RandomStringHash    *string `json:"randomStringHash"`
	RecipientOtherChain *string `json:"recipientOtherChain"`
	Status              *int    `json:"status"`
	SwapID              *string `json:"swapId"`
	Timestamp           *string `json:"timestamp"`
	ToAddr              *string `json:"toAddr"`
	UpdateTime          *string `json:"updateTime"`
}

type Balance struct {
	Symbol *string `json:"symbol"`
	Free   *string `json:"free"`
	Locked *string `json:"locked"`
	Frozen *string `json:"frozen"`
}

type Balances struct {
	Address  *string    `json:"address"`
	Balances []*Balance `json:"balances"`
}

type BlockStats struct {
	LatestBlockHash   *string `json:"latest_block_hash"`
	LatestAppHash     *string `json:"latest_app_hash"`
	LatestBlockHeight *string `json:"latest_block_height"`
	LatestBlockTime   *string `json:"latest_block_time"`
	CatchingUp        *bool   `json:"catching_up"`
}

type CandleStick struct {
	Close            *float64 `json:"close"`
	ClosingTime      *string  `json:"closingTime"`
	High             *float64 `json:"high"`
	Low              *float64 `json:"low"`
	NumberOfTrades   *int     `json:"numberOfTrades"`
	Open             *float64 `json:"open"`
	OpenTime         *string  `json:"openTime"`
	QuoteAssetVolume *float64 `json:"quoteAssetVolume"`
	Volume           *float64 `json:"volume"`
}

type Coin struct {
	Denom  *string `json:"denom"`
	Amount *int    `json:"amount"`
}

type Fee struct {
	MsgType           *string `json:"msg_type"`
	Fee               *int    `json:"fee"`
	FeeFor            *int    `json:"fee_for"`
	MultiTransferFee  *string `json:"multi_transfer_fee"`
	LowerLimitAsMulti *string `json:"lower_limit_as_multi"`
}

type Market struct {
	BaseAssetSymbol  *string `json:"base_asset_symbol"`
	QuoteAssetSymbol *string `json:"quote_asset_symbol"`
	ListPrice        *string `json:"list_price"`
	TickSize         *string `json:"tick_size"`
	LotSize          *string `json:"lot_size"`
}

type MarketDepth struct {
	Bids []*MarketDepthOrder `json:"bids"`
	Asks []*MarketDepthOrder `json:"asks"`
}

type MarketDepthOrder struct {
	Price *string `json:"price"`
	Qty   *string `json:"qty"`
}

type MarketTicker struct {
	AskPrice           *string `json:"askPrice"`
	AskQuantity        *string `json:"askQuantity"`
	BidPrice           *string `json:"bidPrice"`
	CloseTime          *string `json:"closeTime"`
	Count              *string `json:"count"`
	FirstID            *string `json:"firstId"`
	HighPrice          *string `json:"highPrice"`
	LastID             *string `json:"lastId"`
	LastPrice          *string `json:"lastPrice"`
	LastQuantity       *string `json:"lastQuantity"`
	LowPrice           *string `json:"lowPrice"`
	OpenTime           *string `json:"openTime"`
	PrevClosePrice     *string `json:"prevClosePrice"`
	PriceChange        *string `json:"priceChange"`
	PriceChangePercent *string `json:"priceChangePercent"`
	QuoteVolume        *string `json:"quoteVolume"`
	Symbol             *string `json:"symbol"`
	Volume             *string `json:"volume"`
	WeightedAvgPrice   *string `json:"weightedAvgPrice"`
}

type Order struct {
	CumulateQuantity     *string `json:"cumulateQuantity"`
	Fee                  *string `json:"fee"`
	LastExecutedPrice    *string `json:"lastExecutedPrice"`
	LastExecutedQuantity *string `json:"lastExecutedQuantity"`
	OrderCreateTime      *string `json:"orderCreateTime"`
	OrderID              *string `json:"orderId"`
	Owner                *string `json:"owner"`
	Price                *string `json:"price"`
	Quantity             *string `json:"quantity"`
	Side                 *int    `json:"side"`
	Status               *string `json:"status"`
	Symbol               *string `json:"symbol"`
	TimeInForce          *int    `json:"timeInForce"`
	TradeID              *string `json:"tradeId"`
	TransactionHash      *string `json:"transactionHash"`
	TransactionTime      *string `json:"transactionTime"`
	Type                 *int    `json:"type"`
}

type OrderList struct {
	Orders []*Order `json:"orders"`
	Total  *int     `json:"total"`
}

type Proof struct {
	Root  *string `json:"root"`
	Proof *string `json:"proof"`
}

type ProximaAccount struct {
	Account *Account `json:"account"`
	Proof   *Proof   `json:"proof"`
}

func (ProximaAccount) IsProximaModel() {}

type ProximaAtomicSwap struct {
	AtomicSwap *AtomicSwap `json:"atomic_swap"`
	Proof      *Proof      `json:"proof"`
}

type ProximaBlockStats struct {
	BlockStats *BlockStats `json:"block_stats"`
	Proof      *Proof      `json:"proof"`
}

func (ProximaBlockStats) IsProximaModel() {}

type ProximaFees struct {
	Fees  []*Fee `json:"fees"`
	Proof *Proof `json:"proof"`
}

func (ProximaFees) IsProximaModel() {}

type ProximaMarketCandleSticks struct {
	MarketCandlesticks []*CandleStick `json:"market_candlesticks"`
	Proof              *Proof         `json:"proof"`
}

func (ProximaMarketCandleSticks) IsProximaModel() {}

type ProximaMarketDepth struct {
	MarketDepth *MarketDepth `json:"market_depth"`
	Proof       *Proof       `json:"proof"`
}

func (ProximaMarketDepth) IsProximaModel() {}

type ProximaMarketTicker struct {
	MarketTicker *MarketTicker `json:"market_ticker"`
	Proof        *Proof        `json:"proof"`
}

func (ProximaMarketTicker) IsProximaModel() {}

type ProximaMarketTickers struct {
	MarketTickers []*MarketTicker `json:"market_tickers"`
	Proof         *Proof          `json:"proof"`
}

func (ProximaMarketTickers) IsProximaModel() {}

type ProximaMarkets struct {
	Markets []*Market `json:"markets"`
	Proof   *Proof    `json:"proof"`
}

func (ProximaMarkets) IsProximaModel() {}

type ProximaOrder struct {
	Order *Order `json:"order"`
	Proof *Proof `json:"proof"`
}

func (ProximaOrder) IsProximaModel() {}

type ProximaTimelocks struct {
	Timelocks []*Timelock `json:"timelocks"`
	Proof     *Proof      `json:"proof"`
}

func (ProximaTimelocks) IsProximaModel() {}

type ProximaTokens struct {
	Tokens []*Token `json:"tokens"`
	Proof  *Proof   `json:"proof"`
}

func (ProximaTokens) IsProximaModel() {}

type ProximaTrade struct {
	Trade *Trade `json:"trade"`
	Proof *Proof `json:"proof"`
}

type ProximaTransaction struct {
	Transaction *Transaction `json:"transaction"`
	Proof       *Proof       `json:"proof"`
}

func (ProximaTransaction) IsProximaModel() {}

type ProximaValidators struct {
	Validators []*Validator `json:"validators"`
	Proof      *Proof       `json:"proof"`
}

func (ProximaValidators) IsProximaModel() {}

type Timelock struct {
	ID          *int    `json:"ID"`
	Description *string `json:"description"`
	Amount      *Coin   `json:"amount"`
	Locktime    *string `json:"locktime"`
}

type Token struct {
	Name           *string `json:"name"`
	Symbol         *string `json:"symbol"`
	OriginalSymbol *string `json:"original_symbol"`
	TotalSupply    *string `json:"total_supply"`
	Owner          *string `json:"owner"`
}

type Trade struct {
	BaseAsset     *string `json:"baseAsset"`
	BlockHeight   *string `json:"blockHeight"`
	BuyFee        *string `json:"buyFee"`
	BuyerID       *string `json:"buyerId"`
	BuyerOrderID  *string `json:"buyerOrderId"`
	BuySingleFee  *string `json:"buySingleFee"`
	Price         *string `json:"price"`
	Quantity      *string `json:"quantity"`
	QuoteAsset    *string `json:"quoteAsset"`
	SellFee       *string `json:"sellFee"`
	SellerID      *string `json:"sellerId"`
	SellerOrderID *string `json:"sellerOrderId"`
	SellSingleFee *string `json:"sellSingleFee"`
	Symbol        *string `json:"symbol"`
	TickType      *string `json:"tickType"`
	Time          *string `json:"time"`
	TradeID       *string `json:"tradeId"`
}

type Transaction struct {
	BlockHeight *string `json:"blockHeight"`
	Code        *int    `json:"code"`
	Data        *string `json:"data"`
	FromAddr    *string `json:"fromAddr"`
	Memo        *string `json:"memo"`
	OrderID     *string `json:"orderId"`
	ProposalID  *string `json:"proposalId"`
	Sequence    *string `json:"sequence"`
	Source      *string `json:"source"`
	SwapID      *string `json:"swapId"`
	TimeStamp   *string `json:"timeStamp"`
	ToAddr      *string `json:"toAddr"`
	TxAsset     *string `json:"txAsset"`
	TxFee       *string `json:"txFee"`
	TxHash      *string `json:"txHash"`
	TxType      *string `json:"txType"`
	Value       *string `json:"value"`
}

type Validator struct {
	Address          *string `json:"address"`
	PubKey           []*int  `json:"pub_key"`
	VotingPower      *int    `json:"voting_power"`
	ProposerPriority *int    `json:"proposer_priority"`
}
